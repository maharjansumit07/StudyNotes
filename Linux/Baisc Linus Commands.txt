What is the sign displayed at first terminal login?

"$" -- typically a default command prompt for regular account with standard user permissions and does not have administrative or root access. Users can execute most commands, but may not have the necessary permissions to perform certain administrative tasks.

" # "  -- a default command prompt for the root or administrative user account. The user or root has full administrative privileges and can execute any commands. it has the highest level of access and can perform the administrative tasks such as installing, modifying and managing user accounts. 
----------------------------------------------------------------------------------------------------------------------------------------

Hostname:  System's identity name. 
---------
The hostname is saved into /etc/hostname

$ sudo nano /etc/hostname
set the hostname or change the hostname if present. 

or simply directly change the hostname by this command. 
$ sudo hostnamectl set-hostname "new_hostname"

or we can reflect to /etc/hosts directly by adding this.
$ sudo hostnamectl set-hostname "new_hostname" --static


----------------------------------------------------------------------------------------------------------------------------------------
Package manager			
ubuntu/mint         -- apt, snapd, flatpak, software center.
Debian              -  apt,aptitude, snap, flatpak,apt-get,apt-cache
centos/rocky linux  -- dnf , yum		
fedora              - yum, dnf		
arch                - pamac, yay, paru,, flatpak		
=========================================================================================================================================
File Types   = the file types are defied by their first character or letter. 


1. Regular files   == "-"
    -rw-rw-r-- 1 k k    0 Dec  9 09:16 myfile1

2. Directory files  == "d"
    drwxrwxr-x 2 k k 4096 Dec  9 09:16 mydir
    

3. Special files
    a. Block files  == "b"
    There files are hardware files and they are present in /dev. They are create by partitioning or by fdisk.
    brw-rw----  1 root disk        7,   0 Dec  8 13:31 loop0
    brw-rw----  1 root disk        7,   7 Dec  8 13:31 loop7

    b. Character Device file  == "c"
    They provide a serial steam of input or output.
    crw-r----- 1 root root 13, 32 Dec  9 08:39 /dev/input/mouse0

    c. Pipe file == "p"
    prw-rw-r--   1 k k    0 Dec  9 09:56 backpipe

    d. Symbolic file  == "l"
    These are linked files, meaning a shortcut files as in Windows. The inode number for theses file and parent files are same.
    lrwxrwxrwx 1 k k    7 Dec  9 09:16 my_link -> myfile1

    e. Socket File  == "s"
    it is used to pass information between applications.
    srw-rw-rw- 1 root       root          0 Dec  8 13:31 acpid.socket
    srw-rw---- 1 root       docker        0 Dec  8 14:15 docker.sock

=========================================================================================================================================
Command Accesibility (to get details about commands)

--help or /h  -> to learn about the commands , usually used after the command to get more detail.
info    ->  it provides detailed hyperlinked documentations. The pages are organized into chapters and sections. 
whatis  ->  will display one line summary of the purpose of the command. It can be very helpful when we want the description of the command without going into the detailed syntax or options. 
man     ->  short of "Manual", provides the standard reference documentation 
----------------------------------------------------------------------------------------------------------------------------------------
Linux Structure. 

                   | ---- /bin/         [Essential User Command Binaries]
                   | 
                   | ---- /boot/        [Files of the boot loader]
                   |     
                   |---- /dev/          [Hardware Device files]
                   |
                   |---- /media/        [Removable Media]
                   |
                   |---- /mnt/          [Mounted FileSystem]
                   |
                   |---- /opt/          [Add on Application software package]
                   |                    
                   |---- /sbin/         [System Binary]
                   |
  / (root)---------|---- /srv/          [Service Data]
                   |
                   |---- /proc/         [Process Information]
                   |
                   |---- /home/         [Home Directory]
                   |
                   |---- /etc/          [Configuration Files]
                   |
                   |---- /var/          [Variable Files]
                   |
                   |---- /lib/          [System Libraries]
                   |
                   |---- /tmp/          [Temporary files]
                   |
                   |---- /usr/          [User Programs]


=================================================================================================================

File And Direcotry Management
-----------------------------
pwd => to know the current location.
ls =>  to list the file
rm  ==> Remove command, used for removing or deleting files and directories. 
mkdir ==> Make Directory, is used to Create a new directory or folder. 
rmdir ==> remove directory, to remove directory. 
history ==> to view and manage the command history. 

Editors:
vi  => vim editor to edit the files. [!Note] Always user 'sudo' if you are not logged in as 'root' user. 
Nano => simple text editor, and very friendly. 
gedit => Graphical Text Editor as part of GNOME desktop environment.

View data within the file.
cat  => a fundamental command that is used for various text view or manipulations tasks.
less => similar to cat , but used to view the contents of text files or the output of other commands. 
more => similar to cat, but used to view the contents of text files or the out of other commands one page at a time.
cd ==> Change Directory, to navigate to the file system or other directory. 
$ cd (enter)      or cd ~/    or cd ~
 this is take directly to home directory.


Relative Path ==> refers to a way of specifying the location  of a file or directory that is relative to the current working directory.
directory
eg. I have a file here at /home/test folder with text.txt file.
Linux_practical:~/test$ ls -l
total 4
-rw-r--r-- 1 root root    0 Jun  1 19:57 test
-rw-r--r-- 1 root root    0 Jun  1 19:58 test.txt
drwxr-xr-x 3 root root 4096 Jun  1 19:55 test1

now jumping into child directories till test2.
Linux_practical:~/test$ cd test1
Linux_practical:~/test/test1$ cd test2

so relative path here is that .. represents 1 step above the child directory, 
and adding another .. means going another above of child directory or towards parent directory.
Here, as example, I am trying to view the file from Test2 folder, going 2 steps towards the parent directory.
so I am going from test2 to test1 and then test1 to test parent directory. 
Linux_practical:~/test/test1/test2$ ls -l ../../
total 4
-rw-r--r-- 1 root root    0 Jun  1 19:57 test
-rw-r--r-- 1 root root    0 Jun  1 19:58 test.txt
drwxr-xr-x 3 root root 4096 Jun  1 19:55 test1

Similarly, we can move from parent directory to child directory as needed. 

Absolute Path==> refers to the complete and exact location of a file or directory from root directory.
Here, We are in test2 folder. 
Linux_Practical:~/test/test1/test2$ pwd
/home/user/test/test1/test2
Linux_Practical:~/test/test1/test2$ ls
2ndtest.txt
Linux_Practical:~/test/test1/test2$ cd
Linux_Practical:~$

now to view the file, we will be looking from root to home directory going int user directory and lastly to its child directory.
Linux_Practical:~$ ls /home/user/test/test1/test2/
2ndtest.txt

-----------------------------------------------------------------------------------------------------------------------------------
External search within the file.
grep => (Global Regular Expression Print) a command line tool for searching and filtering text. It is widely used in shell scirpts system administration tasks, and data processing workflows. 
egrep  ==> (Extended GREP) is a more pattern matching than grep. as Grep uses basic expressionss , egrep uses extended regular expressions. It can be used to search more than 1 pattern search. 

------------------------------------------------------------------------------------------------------------------------------------

copy files,
-----------
cp ==> to copy files and directories.
scp ==> Secure Copy Protocol , to securely copy files between computer over a network. 
scp user@ip:path/to/remote /path/to/local_directory/
mv ==> to more a file or rename files or directories.
-------------------------------------------------------------------------------------------------------------------------

find out file location.
------------------------
whereis ==> to locate the binary,source, and manual page files for a given command or program. 

find ==> used to search files and direcories based on various criteria, such as names, type, size, permissions and more.
find /path/to/directory -name "filename.txt"
find /path/to/directory -type f # for files,  - type d for direcotry.
find /path/to/directory -size +100M             -- files larger than 100MB , -size -20k --files smaller than 20K.
find /path/to/directory -mtime +8               --files modified more than 8 days ago,     -mtime -1  --files modified less than 1 day ago.
find /path/to/directory -perm 777               --files with permissions 777 (rwxrwxrwx)
find /path/to/directory -name "*.txt" -exec cp {} /backup/directory \;      --to execute command on found files.
find /path/to/directory -type f -name "*.doc" -size +40M -mtime -7          --to find the file extensions with doc with size more than 40MB and modified in within last 7 days.


=========================================================================================================================
File permissions:
-------------------
Read= 4,        write = 2       execute =1 
permissions.
0       No permission
1       only execute
2       only write
3       write and execute
4       only Read
5       Read and execute
6       read and write
7       read, write, execute.
-------------------------------------------------------------------------------------------------------------------------------
chmod: change mode, to change the access permission fo file or directories.
----------
chmod 777 example.txt
here first 7 is for the user,  second 7 is for Group and third 7 is for others.

or, 
chmod u=rwx, g=rwx ,o=rwx file/directory
chmod u=rw, g=, o= files/directory

or, simply all uses the below command for the permission change.
chmod +rwx files/directory 


chown: Change ownership
-------
$ chown [option] owner[:group] file
$ chown john:staff document.txt
or 
$ chown john document.txt
$ chown -R john:staff /path/to/directory
The above example is to change the ownership of a directory and all its contents.


==========================================================================================================================

inode ==> index node, a data structure that stores information about a file or directory. it is used by the operating ysstem to access and manage the file or directory. 
it stores the metadata , or attributes of a file or directory such as file type, permissions, user and group ownership, file size, timestamp,and file store place. 
$ ls -i 
12345 -rw-r--r-- 2 user group 1024 May 31 2024 
12345 -rw-r--r-- 2 user group 1024 May 31 2024 
Here, as above, 12345 is the inode. 

hard link ==> allows efficient file management and organization by providing multiple access points to the same file data.
$ ln original_file hard_link_file
$ ls -li
25165842 -rw-r--r-- 2 user group 25 May 31 12:34 hard_link.txt
25165842 -rw-r--r-- 2 user group 25 May 31 12:34 original_file.txt

$ echo "This is an updated file." > original_file.txt
$ cat original_file.txt
This is an updated file.
$ cat hard_link.txt
This is an updated file.

soft link==> also known as symbolic link, is a special file that serves as a reference to another file or direcotry. 
Similar to creating a shortcut file in windows.
It is created using the 'ln' command with the '-s' option.
eg. 
ln -s source.filename linkname
ln -s file1 link1

ln -s /home/user/documents/important_document.txt /home/user/desktop/important_doc_link

To view the soft link.
ls -l /home/user/desktop
lrwxrwxrwx 1 user user 36 Jun 01 2024 important_doc_link -> /home/user/documents/important_document.txt

----------------------------------------------------------------------------------------------------------------------------------------
User Group and Management

Whoami => to view the active user using the shell.
or 
users   == to view the current user.

su  => switch user

Chown  => change ownership of the file or directory.

chmod  => to change the access permissions of the files or directories.

useradd  => to add users.

groupadd => to add group

passwd  => to change password.

groups => to manage user groups. Groups are collections of users that share permissions and access rights. 

usermod => to modify user account properties, such as primary group, login shell,, home directory and other settings. 

groupmod => to modify the properties of an existing group including changing group name, Group ID or the group members.

chage  => to manage user account password and aging information .

chfn  => change User information 

chsh  => to change user's default login shell. the login shell is the program that is executed when a user logs in to the system.

getent  => used to retrieve information about users, groups, hosts, networks, protocols, services, and other database entries. It gets entries from Name service switch libraries.

cut => a powerful tool to extract specific fields or columns from input text data, commonly used in shell scripts and command line operations to manipulate data. 

awk => widely used for data manipulations and extractions. 

sed => can be used for finding and replacing operations, deleting or adding lines and more. 

-------------------------------------------------------------------------------------------------
change

-I  ==> inactive,    

-d  ==> last date    ==>         chage -d 2023-12-12 username  

-E  ==> Expire date  ==>         chage -E 2024-05-31 username  

-l  ==> list, view inforamion.  ==>   chage -l username

-m  ==> minimum day  ==>         chage -d 2024-05-29 username   

-M  ==> Maximum day   ==>        chage -M -1 username

-W  ==> warning day. ==>         chage -W 7 username

===================================================================================================================================

usermod -a -G group1,group2 username           ==> Add user to groups

usermod -G group1,group2 username              ==> remote users from all group except the primary group.

usermod -g <new group name> username           ==> to change user's primary group

usermod -s /bin/bash username                  ==> to change users login shell.

usermod -L username                            ==> to lock or disable the user account     

usermod -l new_name existing_username          ==> to change the username.

usermod -d /new/home/directory                ==>  To change users Home directory

usermod -L username  or usermod -U username   ==> to lock the user. 

usermod -e YYYY-MM-DD username                ==> to set the expire date

usermod -s /path/to/new/shell username        ==> to change user's shell

usermod -p passord_expire_days username      ==> to set or change the user's password expire date information. 

usermod -u new_uid username                 ==> to change UDI .

====================================================================================================================================
passwd username                 ==>  change user password
passwd -x 90 username           ==>  Change User's password expiration date to 90 days.
passwd -l username              ==>  to lock the user account.
passwd -u username              ==>  unlock the user account.
passwd -e username              ==>  To set the password expire immediately.
====================================================================================================================================
To check users login:
======================
w  ---  show who logged on and their activity.
-------
$ w 
20:49:48 up 3 min,  1 user,  load average: 0.16, 0.10, 0.03
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
Linux    pts/1    -                20:46    3:32   0.04s  0.02s -bash

-----------------------------------------------------------------------------------------------------------------------

who :   to view who logged in
------
who         == display current users logged in detail.
who -a      == all users  or simply it is combination of all (-b -d --login -r -p -t -T -u)
who -b      == time of last boot
who -d      == print dead process
who -H      == print link of column headings 
who -l      == login 
who -q      == to view all logins names 
who -r      == to view run level,
who -s      == print only name
who -T      == to display about terminal type and status of each users currently logged in.
who -u      == List of users logged in with process id

Linux@Pratical:~$ who -u
Linux   pts/1        2024-06-01 11:57  old          487

Linux@Practical:~$ who -a
           system boot  2024-06-01 11:57
LOGIN      console      2024-06-03 21:54            202733 id=cons
LOGIN      tty1         2024-06-03 21:54            202646 id=tty1
Linux   - pts/1        2024-06-01 11:57  old          487
           run-level 5  2024-06-01 11:57
           pts/2        2024-06-01 23:07            119361 id=ts/2  term=0 exit=0

---------------------------------------------------------------------------------------------------------------
Last:   == show listing of last users logged in. 
------
last        == display information about the last logged in users. 
last -a     == display hostname in last column
last -d     == translate ip into hostname 
last -f     == use a specific file instead of /var/log/wtmp
last -F     == Print full login and logout times and date
last -i     == dipslay IP 
last -s     == since times

eg. last -s (yyyy-mm-dd)
    last -s (yyyy-mm-dd hh:mm:ss)
    last -s (hh:mm)
    last -s -(number)days
    last -s (username)
    last -s (1stusername 2nusername)

Linxu@Practical:~$ last -s  12:00
wtmp begins Sat May 25 13:47:06 2024

last -t     == until time
eg.
Linux@Practical:~$ last -t  12:00
Linux    pts/1                         Sat Jun  1 11:57    gone - no logout
reboot   system boot  5.15.146.1-micro Sat Jun  1 11:57   still running
Linux    pts/1                         Wed May 29 21:59 - crash (2+13:58)
reboot   system boot  5.15.146.1-micro Wed May 29 21:59   still running
Linux    pts/1                         Wed May 29 18:34 - crash  (03:24)

last -p     == display who are present at the specific time.
last -w     == display full user and domain names
last -xr    == display system shut down enteries and run level changes.

lastb       == to view bad login attempts
------------------------------------------------------------------
====================================================================================================================================

DNS troubleshooting commands
-----------------------------
DIG:
----
dig == Domain information Groper - a troubleshooting tool in linux and Unix-like operating system. It is used to perform DNS lookups and analyze the responses.
dig www.example.com.np
dig -x IP-ADDRESS           	==> to find out the Name server PTR (Pointer Record).
dig @8.8.8.8 example.com.np
dig example.com.np A
dig example.com.np MX
dig SOA +multiline example.com.np
dig +nssearch example.com.np		==> to display primary and secondary name servers with IP address.
dig SOA example.com.np @ns1.example.com		==> to retrieve SOA record from the specific name server. 
dig +trace www.example.com
dig +yaml www.example.com


NSLOOKUOP
---------
nslookup www.example.com
nslookup -type=PTR IP-ADDRESS/domain-name       , MX, SOA, 
nslookup -debug www.example.com     ==> provides more dtailed information about DNS resolution process,
including the query and response packets.
nslookup -debug -type=A www.example.com
nslookup server 8.8.8.8 example.com         ==> to use 8.8.8.8 server and perform a lookup for the domain example.com

host:
------
host www.example.com         ==> it will display address and mail primary and secondary MX server.
host -a www.example.com      ==> will display detail of A,AAA, MX and NS information.
host -C google.com           ==> to display the nameservers IP and SOA record
host -d sumaharjan.com       ==> to display nameservers and MX record.

=========================================================================================================================================
mount    ---- mount a filesystem
------
etc/fstab    --- may contain lines describing what devices are mounted and location.
lsblk        --- List block devices , list information about all available or specified block devices.

simple way to mound a new drive in linux.
------------------------------------------
$ lsblk   -- to list all block device, including new drivers
or, else the new drive will be found on /dev/sdb or dev/nvme0n1

$ sudo mkdir /mnt/newdrive              --create a mount point for the new drive
$ sudo mount /dev/sdb1 /mnt/newdrive    --mount hte new drive to mount point.
$ df -h                                 -- verify the mount, this will show the new drive mounted at /mnt/newdrive
$ sudo nano /etc/fstab                  
/dev/sdb1 /mnt/newdrive ext4 default 0 0 
-- we need to keep the above /dev/sdb1 line code into /etc/fstab if we want that mount to be automatically open on boot.

Mount a file system:
$ sudo mount /dev/sdb1 /mnt/data

mount a file system with a specific file system type:
$ sudo mount -t ext4 /dev/sdb1 /mnt/data

Mount a remote file system (eg. NFS):
$ sudo mount -t nfs 192.168.1.100:/shared /mnt/remote

mount a file system with a specific mount option 
$ sudo mount -t ext4 -o rw,noatime,data=ordered /dev/sdb1 /mnt/data

mount cd/dvd
$ sudo mount /dev/cdrom /mnt

mount iso image
$ sudo mount -o loop /path/to/image.iso /mnt


=========================================================================================================================================
Process and resource monitoring:
---------------------------------
ps -- Porcess status
-----
-- provicdes  a snapshot of the current processes running on the system.
$ ps
$ ps -e     |---\
                 |-- To viee all process running on the system.
$ ps aux    |---/

$ ps -f             -- full format listing, giving more detailed information about each process.
$ ps --forest       -- show processes in a tree formato, useful for visualizing parent-chlid relationship.
$ ps -u username    -- display processes for a specifi user
$ ps -x             -- show processes without a controlling terminal.
$ ps -p PID         -- select processes by process ID.
$ ps -T             -- Display threads.

---------------------------------------------------------------
top -- provides real-time view of the system's processes. 
-------
key feature: process monitoring, CPU and Memory Usage, Process Proritization, Interactive commands
$ top
$ top -U username       -- to view top processes used by the user.
$ top -c                -- display full command line for each process.
eg.
PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                      
   2188 Linux      9 -11  408748  11948   8236 S   9.1   0.2   5:47.83 /usr/bin/wireplumber                         
   2662 Linux     20   0 2279684  35448  16764 S   9.1   0.5  18:28.80 /usr/bin/gnome-software --gapplication-serv+ 
  51968 Linux     20   0 1132.0g 910964 107880 S   9.1  11.7  57:45.81 /opt/google/chrome/chrome --type=renderer -+ 

$ top -n 5              -- to run the top command 5 times and exit.
$ top -d 5              -- to update the display in every 5 seconds. 

--------------------------------------------------------------------

vmstat:   -- to display detailed information about system resource utilization, includeing cpu, memory , disk and swap usage.
------------
$ vmstat
$ vmstat 5 10           -- to display the system statistics every 5 seconds and for 10 times.
$ vmstat -S m 5 10      -- to diplay the memory usage in megabytes every 5 seconds and for 10 times.

---------------------------------------------------------------
sar :  --  System Activity system_report
-----
-- used to collect, report, and save system activity information. 
-- it provides detaile statistics on varoius sytem resources, makig it useful for performance analysis and troubleshooting. 

$ sar -u            -- to show cpu usages.
$ sar -u 1 5        -- to display CPU usages every 1 seconds for 5 intervals. 
$ sar -r -h         -- Display memory usage in human readable format.
$ sar -r 1 5        -- to display memory useages every 1 seconds for 5 intervals. 
$ sar -r 1 5 -h     -- to display memory usages that is easier to read as human. 
eg. 
01:51:55 PM kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty
01:51:56 PM    656.0M      1.7G      4.3G     58.7%     43.1M      2.0G     32.7G    220.0%      3.5G      2.4G    244.0k
01:51:57 PM    669.0M      1.7G      4.3G     58.6%     43.1M      2.0G     32.7G    219.9%      3.5G      2.4G    244.0k

$ sar -f /var/log/sysstat/sa10    -- display saved data from a specific file. 
$ sar -f /var/log/sysstat/sa10 -s 8:00:00 -e 10:00:00 -u 
-- this command will display the historical CPU utilization repfor from 8 am to 10 am using the data from file "sa10".
eg. 
Linux@Practical:~/Downloads$ sar -f /var/log/sysstat/sa -s 08:00:00 -e 10:00:00 -u
sa02   sa03   sa04   sa05   sa07   sa28   sa29   sa30   sa31   sar02  sar03  sar04  sar27  sar28  sar29  sar30  
Linux@Practical:~/Downloads$ sar -f /var/log/sysstat/sa31 -s 08:00:00 -e 10:00:00 -u
Linux 6.8.0-31-generic (Practical) 	05/31/2024 	_x86_64_	(8 CPU)

09:25:40 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle
09:30:06 AM     all      1.63      0.00      0.78      0.05      0.00     97.54
09:40:02 AM     all      0.98      0.00      0.60      0.02      0.00     98.40
09:50:02 AM     all      1.66      0.00      0.78      0.08      0.00     97.47
Average:        all      1.38      0.00      0.71      0.05      0.00     97.86


=============================================================================================================================

Package management

apt/apt-get
Dpkg

Task scheduling
---------------
At :
-----
at <time>
HH:MM(am/pm) DD.MM.YY YYYY-MM-DD MM/DD/[cc]YY MMDD
-now +num period minutes hours days weeks

Cron:
------
<min> <Hour> <DoM> <Month> <DoW> <Command/Script>
[00-59] [00-23]  [1-31]    [1-12]    [0-6/1-7] 
					     
* = any
/ = frequency. */N, A-B/N 
, = multiple. A,B,C
- = range. A-B

#crontab


head
Accessing logs with tail

tail <options> <logfile>

Logs location: /var/log

<DateTime>	<Hostname>	<Process>[PID]:	Message

var/log/syslog
== stores all records about any global activity in the system. Basically, every event that happens goes into this log.
var/log/dmesg
== stores all logs related to system drivers.
var/log/cups
== stores all logs related to printer.
/var/log/auth.log
== stores all security-related actions. Those include login, logout, and root user activity.
/var/log/kern.log
== stores events of the kernel like info, warning, and errors. Those logs are especially useful for custom kernels.
/var/log/boot.log
== stores system startup info.
/var/log/apt
== stores apt service logs.
/var/log/utmp
== stores users currently logged in the system. $who -H   or    $ w 
/var/log/wtmp
== stores users previously logged in. It contains the past data from utmp. $last -R
/var/log/btmp
== stores failed login attempts. $lastb

Network configuration

Ip 

Ifconfig

Netplan
etc/netplan/
sudo netplan generate
sudo netplan apply

Network tools
Ping:
ping <options> <address>/<ip>
traceroute	
netstat: Alternate name/command now is 'ss'
netstat <options> 
netstat 
ss -4 
ss -6 
ss -ant | grep 443


DNS 
host
Mtr
mtr <options> <domain/IP address>	
nmcli
nmtui ==> GUI network configuration. 
tcpdump 
sar -n DEV 2 10  -- to display network throughtput every 2 seconds for 20 seconds to detect network issue. 





-----------------------------------------------------------------------------------------------------
lsof (List Open Files)
-----------------------
lsof                ==> List all files opened by any process
lsof -p 1000        ==> List files opened by a process with PID 1000
lsof -p #1000       ==> List files opened by any other process than PID 1000
lsof -u <username>  ==> List files opened by specific user-owned processes
lsof -u^root List   ==> files opened by all non-root users
lsof <directory>    ==> Show what processes are using <directory>
lsof <filename>     ==> List all processes that have opened <filename>
lsof +D /tmp        ==> List all files that have been opened under /tmp
lsof +L1            ==> List files deleted but still held open by running processes
lsof -c <command>   ==> List open files by processes executing <command>
lsof -d mem         ==> List all memory-mapped files

List Network Connections and Sockets

lsof -i             ==> List all open network connections
lsof -1:80          ==> List open TCP/UDP connections with port 80
lsof -i tep:1-1024  ==> List open TCP connections with a given port range
lsof -i-n           ==> List open network connections with no reverse DNS lookup
lsof -i-n -P        ==> List open network connections with no port name conversion
lsof -i6            ==> List open IPv6 network connections (-i4 for IPv4)

other uses
lsof -U             ==> List open unix domain sockets
lsof /dev/tty1      ==> List commands/processes associated with /dev/tty1
kill -9 $(lsof -t -u <username>) ==> Kill all activities of a specific user
-----------------------------------------------------------------------------------------------------

Managing Services
Systemd
Systemctl

"/usr/lib/systemd/system"
"/lib/systemd/system"
"/etc/systemd/system"



Firewall:
ufw  => 
allow, 
deny, 
reject, 
limit, 
show, 
reset, 
reload,
disable



Remote login using SSH
Using user and passwd
$ ssh <username>@<host-address>:<port>

Using ssh private key
$ ssh-keygen
$ ssh-copy-id

Using tar for handling archive
tar <options> <files/dirs>
Create archive
$ tar -cvf
$ tar -cvzf

List archive
$ tar -tvf 

Add new files/dirs to archive
$ tar -rvf

Extract an archive
$ tar -xvf

Downloading files using wget



Shell Scripting.
comment
she-bang, interpreter's path
commands

logical operations
if
case
while
for


=============================================================================================================================
OS/Kernel and System commands:
----------------------
uname -- display information about current operating system and hardware.
--------
$ uname           : Displays the kernel name (e.g., "Linux").
$ uname -s        : Displays the kernel name (same as just running $ uname).
$ uname -n        : Displays the network node hostname.
$ uname -r        : Displays the kernel release number.
$ uname -v        : Displays the kernel version.
$ uname -m        : Displays the machine hardware name (e.g., "x86_64").
$ uname -p        : Displays the processor type (e.g., "x86_64").
$ uname -i        : Displays the platform or hardware interface (e.g., "unknown").
$ uname -o        : Displays the operating system name (e.g., "GNU/Linux").
$ uname -a        : Displays all the above information in a single line.


lsb_release       : Display information about the linux      
------------
$ lsb_release -h,       : show this help message and exit
$ lsb_release -v,       : show LSB modules this system supports
$ lsb_release -i,       : show distributor ID
$ lsb_release -d,       : show description of this distribution
$ lsb_release -r,       : show release number of this distribution
$ lsb_release -c,       : show code name of this distribution
$ lsb_release -a,       : show all of the above information
$ lsb_release -s,       : show requested information in short format
eg. 
Linux@Practical:~$ lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 24.04 LTS
Release:	24.04
Codename:	noble

Linux@Practical:~$ lsb_release -as
No LSB modules are available.
Ubuntu
Ubuntu 24.04 LTS
24.04
noble

------------------------------------------------------------
cat /etc/os-release :  -- standard file in linux that provides the information about the operating system.
-------------------
Linux@Practical:~$ cat /etc/os-release
PRETTY_NAME="Ubuntu 24.04 LTS"
NAME="Ubuntu"
VERSION_ID="24.04"
VERSION="24.04 LTS (Noble Numbat)"
VERSION_CODENAME=noble
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=noble
LOGO=ubuntu-logo

hostnamectl - Display Comprehensive information about the Linux distribution.
-------------------
Linux@Practical:~$ hostnamectl
 Static hostname: Practical
       Icon name: computer-laptop
         Chassis: laptop 💻
      Machine ID: 11111111111111111111111111111111
         Boot ID: 22222222222222222222222222222222
Operating System: Ubuntu 24.04 LTS                
          Kernel: Linux 6.8.0-31-generic
    Architecture: x86-64
 Hardware Vendor: HP
  Hardware Model: HP Laptop 14s-dq2xxx
Firmware Version: F.33
   Firmware Date: Wed 2023-10-04
    Firmware Age: 8month 3d




df

du 

free

systemctl 

pwdx :
------
eg. : 
$ top           == to find out the PID
   PID USER  :
   ------    PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                      
  82514 Linux     20   0 1132.0g 254172 128688 S  15.9   3.3   6:14.34 chrome                                       
   3249 Linux     20   0   40.9g 239220  75236 S   1.7   3.1  64:19.87 skypeforlinux                                
   2662 Linux     20   0 2279684  35448  16764 S   1.3   0.5  20:46.74 gnome-software       

to find out the pwd of PID 82514, 
Linuxt@Practical:~/Downloads$ pwdx 82514
82514: /proc/4246/fdinfo

lsmod : --- List of Kernal modules that are currently loaded.
-------
$ lsmod 

lshw  -- list of hardware components of your system.
------------------
$ lshw -short       -- will display brief summary of the hardware components.
Linux@OPractical:~/Downloads$ lshw -short
WARNING: you should run this program as super-user.
H/W path     Device        Class          Description
=====================================================
                           system         Computer
/0                         bus            Motherboard
/0/0                       memory         8064MiB System memory
/0/1                       processor      11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz
/0/100                     bridge         11th Gen Core Processor Host Bridge/DRAM Registers
/0/100/2     /dev/fb0      display        TigerLake-LP GT2 [Iris Xe Graphics]
/0/100/4                   generic        TigerLake-LP Dynamic Tuning Processor Participant
/0/100/8                   generic        GNA Scoring Accelerator module
/0/100/e                   storage        Volume Management Device NVMe RAID Controller
/0/100/14                  bus            Tiger Lake-LP USB 3.2 Gen 2x1 xHCI Host Controller
/0/100/14.2                memory         RAM memory

lspci   --- display all plug and play or PCI(peripheral Component Interconnet) devices connected to system.
---------------
$ lspci -v            -- display detail information about each PCI device


lsusb  - list all usb devices connected to the system.

lsblk           - list information about all available block devices, including disks, partitions and logical volumes.
$ lsblk -f      -- display the file system informaton for each block device.

dmidecode        -- display detailed information about the system's hardware as reported by BIOS.
# dmidecode -t memory       -- display information about the system memory modules.



=============================================================================================================================
.bashrc
getent -- examples
systemctl -type = service 
diff file1 file2
cu -l /dev/ttyUSB0 -s 9600      == Access console 

> -- to copy and paste result to specified folder. 
eg. 
$ top -b -n 1 > system_report.txt
the system_report.txt will have the output of top in the file. 



