What is the sign displayed at first terminal login?

"$" -- typically a default command prompt for regular account with standard user permissions and does not have administrative or root access. Users can execute most commands, but may not have the necessary permissions to perform certain administrative tasks.

" # "  -- a default command prompt for the root or administartive user account. The user or root has full administrative privileges and can execute any commands. it has the highest level of access and can perform the administartive tasks such as installing, modifying and managing user accounts. 

----------------------------------------------------------------------------------------------------------------------------------------
Package manager			
ubuntu/mint -- apt, snapd, flatpak, software center.
Debian - apt,aptitude, snap, flatpak,apt-get,apt-cache
centos/rocky linux -- dnf , yum		
fedora - yum, dnf		
arch - pamac, yay, paru,, flatpak		
----------------------------------------------------------------------------------------------------------------------------------------
Command Accesibility (to get details about commands)

--help or /h  -> to learn about the commands , usually used after the command to get more detail.
info    ->  it provides detailed hyperlinked documentations. The pages are organized into chapters and sections. 
whatis  ->  will display one line summary of the purpose of the command. It can be very helpful when we want the description of the command without going into the detailed syntax or options. 
man     ->  short of "Manual", provdies the standartd reference documentation 
----------------------------------------------------------------------------------------------------------------------------------------
User Group and Management

Whoami => to view the active user using the shell.

su  => switch user

useradd  => to add users.

groupadd => to add group

passwd  => to change password.

groups => to manage user groups. Groups are collections of users that share permissions and access rights. 

usermod => to modify user account properties, such as primary group, login shell,, home directory and other settings. 

chage  => to manage user account password and aging information .

chfn  => change User information 

chsh  => to change user's default login shell. the login shell is the program that is executed when a user logs in to the system.

getent  => used to retrieve information about users, groups, hosts, networks, protocols, services, and other database entries. It gets entries from Name service switch libraries.

cut => a powerful tool to extract specific fields or columns from input text data, commonly used in shell scripts and command line operations to manipulate data. 

awk => widely used for data manipulations and extractions. 

sed => can be used for finding and replacing operations, deleting or adding lines and more. 

-------------------------------------------------------------------------------------------------
change

-I  ==> inactive,    

-d  ==> last date    ==>   chage -d 2023-12-12 username  

-E  ==> Expire date  ==>   chage -E 2024-05-31 username  

-l  ==> list         ==>   chage -l username

-m  ==> minimum day  ==>   chage -d 2024-05-29 username   

-M  ==> Maximum day   ==>  chage -M -1 username

-W  ==> warning day. ==>   chage -W 7 username

===================================================================================================================================

usermod -a -G group1,group2 username           ==> Add user to groups

usermod -G group1,group2 username              ==> remote users from all group except the primary group.

usermod -g <new group name> username           ==> to change user's primary group

usermod -s /bin/bash username                  ==> to change users login shell.

usermod -L username                            ==> to lock or disable the user account     

usermod -l new_name existing_username          ==> to change the username.

usermod -d /new/home/directory                ==>  To change users Home directory

usermod -L username  or usermod -U username   ==> to lock the user. 

usermod -e YYYY-MM-DD username                ==> to set the expire date

usermod -s /path/to/new/shell username        ==> to change user's shell

usermod -p passord_expire_days username      ==> to set or change the user's password expire date information. 

====================================================================================================================================

DNS:

dig == Domain information Groper - a troubleshooting tool in linux and Unix-like operating system. It is used to perform DNS lookups and analyze the responses.
dig www.example.com.np
dig -x IP-ADDRESS 			==> to find out the Name server PTR (Pointer Record).
dig @8.8.8.8 example.com.np
dig example.com.np A
dig example.com.np MX
dig SOA +multiline example.com.np
dig +nssearch example.com.np		==> to display primary and secondary name servers with IP address.
dig SOA example.com.np @ns1.example.com		==> to retrieve SOA recrod from the specific name server. 
dig +trace www.example.com
dig +yaml www.example.com
_______________________________________________________________________________________________________________________________________


nslookup

_______________________________________________________________________________________________________________________________________
host

host -C google.com   ==> to display the nameservers IP and SOA record

host -d sumaharjan.com  ==> to display nameservers and MX record.

=========================================================================================================================================

File And Direcotry Management
pwd =>
ls =>
vi
Nano
gedit
cat
less
more
grep
egrep
rm
mkdir
rmdir
cd
cp
scp
mv
history
whereis
find 
hard link
soft link

mount



Managing ownership and permissions in files and directory
chown
chmod

Process and resource monitoring
ps
top

=============================================================================================================================

Package management

apt/apt-get
Dpkg

Task scheduling

At
at <time>
HH:MM(am/pm) DD.MM.YY YYYY-MM-DD MM/DD/[cc]YY MMDD
-now +num period minutes hours days weeks

Cron
<min> <Hour> <DoM> <Month> <DoW> <Command/Script>
[00-59] [00-23]  [1-31]    [1-12]    [0-6/1-7] 
					     
* = any
/ = frequency. */N, A-B/N 
, = multiple. A,B,C
- = range. A-B

#crontab



Accessing logs with tail

tail <options> <logfile>

Logs location: /var/log

<DateTime>	<Hostname>	<Process>[PID]:	Message

var/log/syslog
stores all records about any global activity in the system. Basically, every event that happens goes into this log.
var/log/dmesg
stores all logs related to system drivers.
var/log/cups
stores all logs related to printer.
/var/log/auth.log
stores all security-related actions. Those include login, logout, and root user activity.
/var/log/kern.log
stores events of the kernel like info, warning, and errors. Those logs are especially useful for custom kernels.
/var/log/boot.log
stores system startup info.
/var/log/apt
stores apt service logs.
/var/log/utmp
stores users currently logged in the system. $who -H
/var/log/wtmp
stores users previously logged in. It contains the past data from utmp. $last -R
/var/log/btmp
stores failed login attempts. $lastb

Network configuration

Ip 

Ifconfig

Netplan
etc/netplan/
sudo netplan generate
sudo netplan apply

Network tools

Ping:
ping <options> <address>/<ip>
traceroute	
netstat:
netstat <options> 

Mtr
mtr <options> <domain/IP address>	

nmcli

nmtui ==> GUI network configuration. 




Managing Services
Systemd
Systemctl

"/usr/lib/systemd/system"
"/lib/systemd/system"
"/etc/systemd/system"



Firewall:
ufw  => 
allow, 
deny, 
reject, 
limit, 
show, 
reset, 
reload,
disable



Remote login using SSH
Using user and passwd
$ ssh <username>@<host-address>:<port>

Using ssh private key
$ ssh-keygen
$ ssh-copy-id

Using tar for handling archive
tar <options> <files/dirs>
Create archive
$ tar -cvf
$ tar -cvzf

List archive
$ tar -tvf 

Add new files/dirs to archive
$ tar -rvf

Extract an archive
$ tar -xvf

Downloading files using wget



Shell Scripting.
comment
she-bang, interpreter's path
commands

logical operations
if
case
while
for








